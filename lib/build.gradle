/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.13.3'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.assertj:assertj-core:3.27.3'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.18.0'

    implementation 'com.amazonaws:aws-lambda-java-core:1.3.0'
    implementation 'com.amazonaws:aws-lambda-java-events:3.16.0'
    implementation 'software.amazon.awssdk:s3:2.31.78'

    implementation 'org.json:json:20250517'

    implementation 'commons-io:commons-io:2.19.0'

    implementation 'org.apache.opennlp:opennlp-tools:2.5.4'
    implementation 'org.apache.opennlp:opennlp-uima:2.5.4'

    implementation 'com.networknt:json-schema-validator:1.5.8'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.1'

    implementation 'org.slf4j:slf4j-nop:2.0.17'
}


tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from(jar)
        from configurations.runtimeClasspath
    }
}

test {
    useJUnitPlatform()
}

build.dependsOn buildZip
